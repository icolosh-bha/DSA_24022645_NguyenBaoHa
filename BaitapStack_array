#include <bits/stdc++.h>
using namespace std;

struct List {
    int arr[1000];
    int sizee;
    int topp;

    List() {
        sizee = 0;
        topp = -1; // stack rỗng
    }

    bool addh(int x) { // thêm cuối
        if (sizee == 1000) return false;
        arr[sizee++] = x;
        return true;
    }

    bool addt(int x) { // thêm đầu
        if (sizee == 1000) return false;
        for (int i = sizee; i > 0; i--)
            arr[i] = arr[i - 1];
        arr[0] = x;
        sizee++;
        return true;
    }

    bool addi(int x, int pos) { // thêm vào pos
        if (sizee == 1000 || pos < 0 || pos > sizee) return false;
        for (int i = sizee; i > pos; i--)
            arr[i] = arr[i - 1];
        arr[pos] = x;
        sizee++;
        return true;
    }

    bool poph() { // xóa đầu
        if (sizee == 0) return false;
        for (int i = 0; i < sizee - 1; i++)
            arr[i] = arr[i + 1];
        sizee--;
        return true;
    }

    bool popt() { // xóa cuối
        if (sizee == 0) return false;
        sizee--;
        return true;
    }

    bool popi(int pos) { // xóa tại pos
        if (pos < 0 || pos >= sizee) return false;
        for (int i = pos; i < sizee - 1; i++)
            arr[i] = arr[i + 1];
        sizee--;
        return true;
    }

    int get(int pos) { // lấy phần tử tại pos
        if (pos < 0 || pos >= sizee) return -1;
        return arr[pos];
    }

    void print() { // in xuôi
        for (int i = 0; i < sizee; i++)
            cout << arr[i] << " ";
        cout << endl;
    }

    void printReverse() { // in ngược
        for (int i = sizee - 1; i >= 0; i--)
            cout << arr[i] << " ";
        cout << endl;
    }

    // stack
    bool isEmpty(){
        return (topp == -1);
    }

    bool push(int x){
        if (topp == 1000 - 1) return false;
        arr[++topp] = x;
        return true;
    }

    int pop(){
        if (isEmpty()) return -999; // giá trị lỗi
        return arr[topp--];
    }

    int top(){
        if (isEmpty()) return -1; // giá trị lỗi
        return arr[topp];
    }

    int size(){
        return topp + 1;
    }
};

int main() {
    List l;

    // Test phần danh sách
    cout << "===== TEST LIST =====" << endl;
    l.addh(10);
    l.addh(20);
    l.addt(5);
    l.addi(15, 2);  // thêm vào giữa
    cout << "Danh sach sau khi them: ";
    l.print();

    l.poph();
    cout << "Sau khi xoa dau: ";
    l.print();

    l.popt();
    cout << "Sau khi xoa cuoi: ";
    l.print();

    l.addh(30);
    l.addh(40);
    cout << "In nguoc: ";
    l.printReverse();

    cout << "Lay phan tu tai vi tri 2: " << l.get(2) << endl;

    l.popi(1);
    cout << "Sau khi xoa tai vi tri 1: ";
    l.print();

    // Test phần stack
    cout << "\n===== TEST STACK =====" << endl;
    cout << "Push 3 phan tu 100, 200, 300" << endl;
    l.push(100);
    l.push(200);
    l.push(300);

    cout << "Top hien tai: " << l.top() << endl;
    cout << "Size hien tai: " << l.size() << endl;

    cout << "Pop: " << l.pop() << endl;
    cout << "Pop: " << l.pop() << endl;
    cout << "Top con lai: " << l.top() << endl;
    cout << "Size con lai: " << l.size() << endl;

    cout << "Pop het stack..." << endl;
    cout << "Pop: " << l.pop() << endl;
    cout << "Pop (rong): " << l.pop() << endl;

    return 0;
}
